{"searchDocs":[{"title":"MaterialsContext","type":0,"sectionRef":"#","url":"/open_rt/api/MaterialsContext","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"MaterialsContext","url":"/open_rt/api/MaterialsContext#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"MaterialsContext","url":"/open_rt/api/MaterialsContext#new","content":"Constructor &lt;/&gt; MaterialsContext.new() → MaterialsContext Creates a new MaterialsContext instance.  ","version":null,"tagName":"h3"},{"title":"destroy​","type":1,"pageTitle":"MaterialsContext","url":"/open_rt/api/MaterialsContext#destroy","content":"Destructor &lt;/&gt; MaterialsContext:destroy() → nil Destroys an existing MaterialsContext instance and all associated metadata.  ","version":null,"tagName":"h3"},{"title":"addMaterial​","type":1,"pageTitle":"MaterialsContext","url":"/open_rt/api/MaterialsContext#addMaterial","content":"Setter &lt;/&gt; MaterialsContext:addMaterial( MaterialInstance: Material-- The material instance to add ) → nil Creates a new Material instance and adds it to the MaterialsContext.  ","version":null,"tagName":"h3"},{"title":"removeMaterial​","type":1,"pageTitle":"MaterialsContext","url":"/open_rt/api/MaterialsContext#removeMaterial","content":"Setter &lt;/&gt; MaterialsContext:removeMaterial( identifier:: (string | Material)-- The name of the material to remove. This will not delete the material instance. ) → nil Removes an existing Material instance from the MaterialsContext instance.  ","version":null,"tagName":"h3"},{"title":"getMaterial​","type":1,"pageTitle":"MaterialsContext","url":"/open_rt/api/MaterialsContext#getMaterial","content":"Getter &lt;/&gt; MaterialsContext:getMaterial( identifier:: (string | Material)-- The Name of the Material or the Material instance itself ) → MaterialT?-- Returns nil if the Material is not found Returns an existing Material instance from the MaterialsContext instance. ","version":null,"tagName":"h3"},{"title":"Core","type":0,"sectionRef":"#","url":"/open_rt/api/Core","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"Core","url":"/open_rt/api/Core#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"Core","url":"/open_rt/api/Core#new","content":"Constructor &lt;/&gt; Core:new() → CoreT Creates a new OpenRT Core instance.  ","version":null,"tagName":"h3"},{"title":"destroy​","type":1,"pageTitle":"Core","url":"/open_rt/api/Core#destroy","content":"Destructor &lt;/&gt; Core:destroy() → nil Destroys an existing OpenRT Core instance and all attached metadata and instances.  ","version":null,"tagName":"h3"},{"title":"setRenderingContext​","type":1,"pageTitle":"Core","url":"/open_rt/api/Core#setRenderingContext","content":"Setter &lt;/&gt; Core:setRenderingContext( context: RenderContextT-- The RenderContext Instance (can be nil) ) → nil Assigns a RenderContext Instance to Core  ","version":null,"tagName":"h3"},{"title":"setLightingContext​","type":1,"pageTitle":"Core","url":"/open_rt/api/Core#setLightingContext","content":"Setter &lt;/&gt; Core:setLightingContext( context: LightingContextT?-- The LightingContext Instance (can be nil) ) → nil Assigns a LightingContext Instance to Core  ","version":null,"tagName":"h3"},{"title":"setMaterialsContext​","type":1,"pageTitle":"Core","url":"/open_rt/api/Core#setMaterialsContext","content":"Setter &lt;/&gt; Core:setMaterialsContext( context: MaterialsContextT-- The MaterialsContext Instance (can be nil) ) → nil Assigns a MaterialsContext Instance to Core  ","version":null,"tagName":"h3"},{"title":"getRenderingContext​","type":1,"pageTitle":"Core","url":"/open_rt/api/Core#getRenderingContext","content":"&lt;/&gt; Core:getRenderingContext() → RenderContextT?-- The RenderContext or nil Returns the current RenderContext Instance  ","version":null,"tagName":"h3"},{"title":"getLightingContext​","type":1,"pageTitle":"Core","url":"/open_rt/api/Core#getLightingContext","content":"&lt;/&gt; Core:getLightingContext() → LightingContextT?-- The LightingContext or nil Returns the current LightingContext Instance  ","version":null,"tagName":"h3"},{"title":"getMaterialsContext​","type":1,"pageTitle":"Core","url":"/open_rt/api/Core#getMaterialsContext","content":"&lt;/&gt; Core:getMaterialsContext() → MaterialsContextT?-- The MaterialsContext or nil Returns the current MaterialsContext Instance ","version":null,"tagName":"h3"},{"title":"Texture","type":0,"sectionRef":"#","url":"/open_rt/api/Texture","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"Texture","url":"/open_rt/api/Texture#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"Texture","url":"/open_rt/api/Texture#new","content":"Constructor &lt;/&gt; Texture.new( name: string-- The name of the Texture ) → Texture Creates a new Texture instance.  ","version":null,"tagName":"h3"},{"title":"destroy​","type":1,"pageTitle":"Texture","url":"/open_rt/api/Texture#destroy","content":"Destructor &lt;/&gt; Texture:destroy() → nil Destroys the current Image and all associated metadata for the Texture  ","version":null,"tagName":"h3"},{"title":"clone​","type":1,"pageTitle":"Texture","url":"/open_rt/api/Texture#clone","content":"Cloner &lt;/&gt; Texture:clone( name: string-- The name to give the cloned Texture ) → Texture Clones a Texture instance  ","version":null,"tagName":"h3"},{"title":"setParentContext​","type":1,"pageTitle":"Texture","url":"/open_rt/api/Texture#setParentContext","content":"Setter &lt;/&gt; Texture:setParentContext( Context:: MaterialsContext-- The context the Texture is stored in ) → nil Sets the MaterialsContext that the Texture is stored in.  ","version":null,"tagName":"h3"},{"title":"setSize​","type":1,"pageTitle":"Texture","url":"/open_rt/api/Texture#setSize","content":"Setter &lt;/&gt; Texture:setSize( size:: Vector2 -- The new size of the Texture ) → nil Sets the dimensions of the EditableImage attached to the Texture  ","version":null,"tagName":"h3"},{"title":"setScale​","type":1,"pageTitle":"Texture","url":"/open_rt/api/Texture#setScale","content":"Setter &lt;/&gt; Texture:setScale( scale:: number-- The new scale of the Texture ) → nil Sets the scale of the Image attached to the Texture for UV mapping during rendering  ","version":null,"tagName":"h3"},{"title":"setImageId​","type":1,"pageTitle":"Texture","url":"/open_rt/api/Texture#setImageId","content":"Setter &lt;/&gt; Texture:setImageId( imageId: string-- The image id used to create the Image ) → nil Creates an EditableImage from an asset ID and assigns it to the Texture  ","version":null,"tagName":"h3"},{"title":"setContent​","type":1,"pageTitle":"Texture","url":"/open_rt/api/Texture#setContent","content":"Setter &lt;/&gt; Texture:setContent( imageContent: Content-- The Image Content used to create the EditableImage used by the Texture ) → nil Creates a new EditableImage and assigns it to the Texture  ","version":null,"tagName":"h3"},{"title":"compile​","type":1,"pageTitle":"Texture","url":"/open_rt/api/Texture#compile","content":"Setter &lt;/&gt; Texture:compile() → buffer?-- Returns nil if Image is nil Compiles the Texture's Image pixel data into a buffer.u8 and assigns it to the Texture's PixelBuffer  ","version":null,"tagName":"h3"},{"title":"getName​","type":1,"pageTitle":"Texture","url":"/open_rt/api/Texture#getName","content":"Getter &lt;/&gt; Texture:getName() → string Returns the Name of the Texture  ","version":null,"tagName":"h3"},{"title":"getSize​","type":1,"pageTitle":"Texture","url":"/open_rt/api/Texture#getSize","content":"Getter &lt;/&gt; Texture:getSize() → Vector2 -- Returns nil if Size is nil Returns the Size of the Texture  ","version":null,"tagName":"h3"},{"title":"getScale​","type":1,"pageTitle":"Texture","url":"/open_rt/api/Texture#getScale","content":"Getter &lt;/&gt; Texture:getScale() → number Returns the Scale of the Texture  ","version":null,"tagName":"h3"},{"title":"getImageId​","type":1,"pageTitle":"Texture","url":"/open_rt/api/Texture#getImageId","content":"Getter &lt;/&gt; Texture:getImageId() → string?-- Returns nil if Content is nil Returns the URI of Content attached to the Texture ","version":null,"tagName":"h3"},{"title":"RenderContext","type":0,"sectionRef":"#","url":"/open_rt/api/RenderContext","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"RenderContext","url":"/open_rt/api/RenderContext#functions","content":" ","version":null,"tagName":"h2"},{"title":"destroy​","type":1,"pageTitle":"RenderContext","url":"/open_rt/api/RenderContext#destroy","content":"Destructor &lt;/&gt; RenderContext:destroy() → nil Destroys a RenderContext instance.  ","version":null,"tagName":"h3"},{"title":"setParent​","type":1,"pageTitle":"RenderContext","url":"/open_rt/api/RenderContext#setParent","content":"Setter &lt;/&gt; RenderContext:setParent( parent: CoreT?-- The parent Core object (can be nil) ) → nil Sets the parent Core object.  ","version":null,"tagName":"h3"},{"title":"setScreenSize​","type":1,"pageTitle":"RenderContext","url":"/open_rt/api/RenderContext#setScreenSize","content":"Setter &lt;/&gt; RenderContext:setScreenSize( screenSize: Vector2 -- The new screen size, capped at (512, 512) ) → nil Sets the screen size.  ","version":null,"tagName":"h3"},{"title":"setViewportSize​","type":1,"pageTitle":"RenderContext","url":"/open_rt/api/RenderContext#setViewportSize","content":"Setter &lt;/&gt; RenderContext:setViewportSize( viewportSize: Vector2 -- The new viewport size ) → nil Sets the viewport size.  ","version":null,"tagName":"h3"},{"title":"setWorldScreenDistance​","type":1,"pageTitle":"RenderContext","url":"/open_rt/api/RenderContext#setWorldScreenDistance","content":"Setter &lt;/&gt; RenderContext:setWorldScreenDistance( distance: number-- The new world screen distance ) → nil Sets the world screen distance.  ","version":null,"tagName":"h3"},{"title":"setRayDistance​","type":1,"pageTitle":"RenderContext","url":"/open_rt/api/RenderContext#setRayDistance","content":"Setter &lt;/&gt; RenderContext:setRayDistance( distance: number-- The new ray distance ) → nil Sets the maximum ray tracing distance.  ","version":null,"tagName":"h3"},{"title":"setFogStart​","type":1,"pageTitle":"RenderContext","url":"/open_rt/api/RenderContext#setFogStart","content":"Setter &lt;/&gt; RenderContext:setFogStart( fogStart: number-- The new fog start distance ) → nil Sets the fog start distance.  ","version":null,"tagName":"h3"},{"title":"setGamma​","type":1,"pageTitle":"RenderContext","url":"/open_rt/api/RenderContext#setGamma","content":"Setter &lt;/&gt; RenderContext:setGamma( gamma: number-- The new gamma value ) → nil Sets the gamma correction value.  ","version":null,"tagName":"h3"},{"title":"setWorldScreenCoord​","type":1,"pageTitle":"RenderContext","url":"/open_rt/api/RenderContext#setWorldScreenCoord","content":"Setter &lt;/&gt; RenderContext:setWorldScreenCoord( coord: CFrame -- The new world screen coordinate frame ) → nil Sets the world screen coordinate frame.  ","version":null,"tagName":"h3"},{"title":"setSunDirection​","type":1,"pageTitle":"RenderContext","url":"/open_rt/api/RenderContext#setSunDirection","content":"Setter &lt;/&gt; RenderContext:setSunDirection( direction: Vector3 -- The new sun direction ) → nil Sets the sun direction.  ","version":null,"tagName":"h3"},{"title":"setSkyColor​","type":1,"pageTitle":"RenderContext","url":"/open_rt/api/RenderContext#setSkyColor","content":"Setter &lt;/&gt; RenderContext:setSkyColor( color: Vector3 -- The new sky color ) → nil Sets the sky color.  ","version":null,"tagName":"h3"},{"title":"setInterlaceGroupCount​","type":1,"pageTitle":"RenderContext","url":"/open_rt/api/RenderContext#setInterlaceGroupCount","content":"Setter &lt;/&gt; RenderContext:setInterlaceGroupCount( count: number-- The new interlace group count ) → nil Sets the interlace group count.  ","version":null,"tagName":"h3"},{"title":"setInterlaceGroup​","type":1,"pageTitle":"RenderContext","url":"/open_rt/api/RenderContext#setInterlaceGroup","content":"Setter &lt;/&gt; RenderContext:setInterlaceGroup( group: number-- The new interlace group ) → nil Sets the current interlace group.  ","version":null,"tagName":"h3"},{"title":"addShaderPass​","type":1,"pageTitle":"RenderContext","url":"/open_rt/api/RenderContext#addShaderPass","content":"Setter &lt;/&gt; RenderContext:addShaderPass( shader: any-- The shader pass to add ) → nil Adds a shader pass to the shader registry.  ","version":null,"tagName":"h3"},{"title":"removeShaderPass​","type":1,"pageTitle":"RenderContext","url":"/open_rt/api/RenderContext#removeShaderPass","content":"Setter &lt;/&gt; RenderContext:removeShaderPass( shader: any-- The shader pass to remove ) → nil Removes a shader pass from the shader registry.  ","version":null,"tagName":"h3"},{"title":"clearShaderRegistry​","type":1,"pageTitle":"RenderContext","url":"/open_rt/api/RenderContext#clearShaderRegistry","content":"Setter &lt;/&gt; RenderContext:clearShaderRegistry() → nil Clears all shader passes from the shader registry.  ","version":null,"tagName":"h3"},{"title":"getName​","type":1,"pageTitle":"RenderContext","url":"/open_rt/api/RenderContext#getName","content":"Getter &lt;/&gt; RenderContext:getName() → string Returns the name of the RenderContext.  ","version":null,"tagName":"h3"},{"title":"getParent​","type":1,"pageTitle":"RenderContext","url":"/open_rt/api/RenderContext#getParent","content":"Getter &lt;/&gt; RenderContext:getParent() → CoreT? Returns the parent Core object.  ","version":null,"tagName":"h3"},{"title":"getScreenSize​","type":1,"pageTitle":"RenderContext","url":"/open_rt/api/RenderContext#getScreenSize","content":"Getter &lt;/&gt; RenderContext:getScreenSize() → Vector2  Returns the screen size.  ","version":null,"tagName":"h3"},{"title":"getViewportSize​","type":1,"pageTitle":"RenderContext","url":"/open_rt/api/RenderContext#getViewportSize","content":"Getter &lt;/&gt; RenderContext:getViewportSize() → Vector2  Returns the viewport size.  ","version":null,"tagName":"h3"},{"title":"getWorldScreenDistance​","type":1,"pageTitle":"RenderContext","url":"/open_rt/api/RenderContext#getWorldScreenDistance","content":"Getter &lt;/&gt; RenderContext:getWorldScreenDistance() → number Returns the world screen distance.  ","version":null,"tagName":"h3"},{"title":"getRayDistance​","type":1,"pageTitle":"RenderContext","url":"/open_rt/api/RenderContext#getRayDistance","content":"Getter &lt;/&gt; RenderContext:getRayDistance() → number Returns the maximum ray tracing distance.  ","version":null,"tagName":"h3"},{"title":"getFogStart​","type":1,"pageTitle":"RenderContext","url":"/open_rt/api/RenderContext#getFogStart","content":"Getter &lt;/&gt; RenderContext:getFogStart() → number Returns the fog start distance.  ","version":null,"tagName":"h3"},{"title":"getGamma​","type":1,"pageTitle":"RenderContext","url":"/open_rt/api/RenderContext#getGamma","content":"Getter &lt;/&gt; RenderContext:getGamma() → number Returns the gamma correction value.  ","version":null,"tagName":"h3"},{"title":"getWorldScreenCoord​","type":1,"pageTitle":"RenderContext","url":"/open_rt/api/RenderContext#getWorldScreenCoord","content":"Getter &lt;/&gt; RenderContext:getWorldScreenCoord() → CFrame  Returns the world screen coordinate frame.  ","version":null,"tagName":"h3"},{"title":"getWorldScreenCornerCoord​","type":1,"pageTitle":"RenderContext","url":"/open_rt/api/RenderContext#getWorldScreenCornerCoord","content":"Getter &lt;/&gt; RenderContext:getWorldScreenCornerCoord() → CFrame  Returns the world screen corner coordinate frame.  ","version":null,"tagName":"h3"},{"title":"getSunDirection​","type":1,"pageTitle":"RenderContext","url":"/open_rt/api/RenderContext#getSunDirection","content":"Getter &lt;/&gt; RenderContext:getSunDirection() → Vector3  Returns the sun direction.  ","version":null,"tagName":"h3"},{"title":"getSkyColor​","type":1,"pageTitle":"RenderContext","url":"/open_rt/api/RenderContext#getSkyColor","content":"Getter &lt;/&gt; RenderContext:getSkyColor() → Vector3  Returns the sky color.  ","version":null,"tagName":"h3"},{"title":"getInterlaceGroupCount​","type":1,"pageTitle":"RenderContext","url":"/open_rt/api/RenderContext#getInterlaceGroupCount","content":"Getter &lt;/&gt; RenderContext:getInterlaceGroupCount() → number Returns the interlace group count.  ","version":null,"tagName":"h3"},{"title":"getInterlaceGroup​","type":1,"pageTitle":"RenderContext","url":"/open_rt/api/RenderContext#getInterlaceGroup","content":"Getter &lt;/&gt; RenderContext:getInterlaceGroup() → number Returns the current interlace group.  ","version":null,"tagName":"h3"},{"title":"getShaderRegistry​","type":1,"pageTitle":"RenderContext","url":"/open_rt/api/RenderContext#getShaderRegistry","content":"Getter &lt;/&gt; RenderContext:getShaderRegistry() → array&lt;any&gt; Returns the shader registry. ","version":null,"tagName":"h3"},{"title":"Material","type":0,"sectionRef":"#","url":"/open_rt/api/Material","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"Material","url":"/open_rt/api/Material#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"Material","url":"/open_rt/api/Material#new","content":"Constructor &lt;/&gt; Material.new( name: string-- The name of the material ) → Material Creates a new Material instance under a given name. This name acts as an identifier that cannot be changed after creation.  ","version":null,"tagName":"h3"},{"title":"destroy​","type":1,"pageTitle":"Material","url":"/open_rt/api/Material#destroy","content":"Destructor &lt;/&gt; Material:destroy() → nil Destroys a Material instance and detaches it from the parent context.  ","version":null,"tagName":"h3"},{"title":"clone​","type":1,"pageTitle":"Material","url":"/open_rt/api/Material#clone","content":"Cloner &lt;/&gt; Material:clone( name: string-- The name to give the cloned Material ) → Material Clones a Material instance  ","version":null,"tagName":"h3"},{"title":"setParentContext​","type":1,"pageTitle":"Material","url":"/open_rt/api/Material#setParentContext","content":"Setter &lt;/&gt; Material:setParentContext( Context: MaterialsContext-- The MaterialsContext to attach the Material to. If Context == nil, the Material will be detached from its parent context. ) → nil Attaches the Material to an existing MaterialsContext.  ","version":null,"tagName":"h3"},{"title":"setSize​","type":1,"pageTitle":"Material","url":"/open_rt/api/Material#setSize","content":"Setter &lt;/&gt; Material:setSize( size: Vector2 -- The new size to set ) → nil Sets the shared dimensions between all texture channels.  ","version":null,"tagName":"h3"},{"title":"setTextureSampleScale​","type":1,"pageTitle":"Material","url":"/open_rt/api/Material#setTextureSampleScale","content":"Setter &lt;/&gt; Material:setTextureSampleScale( scale: number,-- The new scale to set textureName: string,-- The name of the Texture under the texture channel textureChannelType: (&quot;Albedo&quot; | &quot;Normal&quot; | &quot;Specular&quot;)-- The texture channel type ) → nil Sets the UV sample scale of a Texture under a given texture channel.  ","version":null,"tagName":"h3"},{"title":"setReflectionScale​","type":1,"pageTitle":"Material","url":"/open_rt/api/Material#setReflectionScale","content":"Setter &lt;/&gt; Material:setReflectionScale( scale: number-- The new scale to set ) → nil Sets the shared dimensions between all texture channels.  ","version":null,"tagName":"h3"},{"title":"setBaseMaterial​","type":1,"pageTitle":"Material","url":"/open_rt/api/Material#setBaseMaterial","content":"Setter &lt;/&gt; Material:setBaseMaterial(material: Enum.Material) → nil Sets the underlying Material that the current Material renders on top of.  ","version":null,"tagName":"h3"},{"title":"setSurfaceEnabled​","type":1,"pageTitle":"Material","url":"/open_rt/api/Material#setSurfaceEnabled","content":"Setter &lt;/&gt; Material:setSurfaceEnabled( surface: (&quot;Top&quot; | &quot;Bottom&quot; | &quot;Left&quot; | &quot;Right&quot; | &quot;Front&quot; | &quot;Back&quot;), enabled: boolean ) → nil Sets whether the Material renders on top of a specific surface type  ","version":null,"tagName":"h3"},{"title":"addTexture​","type":1,"pageTitle":"Material","url":"/open_rt/api/Material#addTexture","content":"Setter &lt;/&gt; Material:addTexture( Tex: TextureT,-- The Texture to add to the texture channel textureChannelType: TextureChannelType-- The texture channel type (&quot;Albedo&quot;, &quot;Normal&quot;, &quot;Specular&quot;) ) → nil Adds a Texture to an existing texture channel. If the Texture already exists, a copy will still be added to the texture channel.  ","version":null,"tagName":"h3"},{"title":"removeTexture​","type":1,"pageTitle":"Material","url":"/open_rt/api/Material#removeTexture","content":"Setter &lt;/&gt; Material:removeTexture( Tex: TextureT,-- The Texture to remove from the texture channel textureChannelType: TextureChannelType-- The texture channel type (&quot;Albedo&quot;, &quot;Normal&quot;, &quot;Specular&quot;) ) → nil Removes a Texture from an existing texture channel. If the Texture already exists, a copy will still be added to the texture channel.  ","version":null,"tagName":"h3"},{"title":"clearTextureChannel​","type":1,"pageTitle":"Material","url":"/open_rt/api/Material#clearTextureChannel","content":"Setter &lt;/&gt; Material:clearTextureChannel( textureChannelType: TextureChannelType-- The texture channel type (&quot;Albedo&quot;, &quot;Normal&quot;, &quot;Specular&quot;) ) → nil Removes all Textures from an existing texture channel.  ","version":null,"tagName":"h3"},{"title":"getName​","type":1,"pageTitle":"Material","url":"/open_rt/api/Material#getName","content":"Getter &lt;/&gt; Material:getName() → string Returns the Name of the Material  ","version":null,"tagName":"h3"},{"title":"getSize​","type":1,"pageTitle":"Material","url":"/open_rt/api/Material#getSize","content":"Getter &lt;/&gt; Material:getSize() → Vector2  Returns the shared dimensions between all texture channels.  ","version":null,"tagName":"h3"},{"title":"getTextureSampleScale​","type":1,"pageTitle":"Material","url":"/open_rt/api/Material#getTextureSampleScale","content":"Getter &lt;/&gt; Material:getTextureSampleScale( textureName: string,-- The name of the Texture under the texture channel textureChannelType: (&quot;Albedo&quot; | &quot;Normal&quot; | &quot;Specular&quot;)-- The texture channel type ) → nil Returns the UV sample scale of a Texture under a given texture channel.  ","version":null,"tagName":"h3"},{"title":"getReflectionScale​","type":1,"pageTitle":"Material","url":"/open_rt/api/Material#getReflectionScale","content":"Getter &lt;/&gt; Material:getReflectionScale() → number Returns the reflection scale of the Material.  ","version":null,"tagName":"h3"},{"title":"getParentContext​","type":1,"pageTitle":"Material","url":"/open_rt/api/Material#getParentContext","content":"Getter &lt;/&gt; Material:getParentContext() → MaterialsContextT?-- Returns nil if the ParentContext is nil Returns the ParentContext of the Material.  ","version":null,"tagName":"h3"},{"title":"getBaseMaterial​","type":1,"pageTitle":"Material","url":"/open_rt/api/Material#getBaseMaterial","content":"Getter &lt;/&gt; Material:getBaseMaterial() → Enum.Material Returns the underlying material the Material Instance renders on top of.  ","version":null,"tagName":"h3"},{"title":"getSurfaceEnabled​","type":1,"pageTitle":"Material","url":"/open_rt/api/Material#getSurfaceEnabled","content":"Getter &lt;/&gt; Material:getSurfaceEnabled(surface: (&quot;Top&quot; | &quot;Bottom&quot; | &quot;Left&quot; | &quot;Right&quot; | &quot;Front&quot; | &quot;Back&quot;)) → boolean Returns whether the Material renders on top of a specific surface type.  ","version":null,"tagName":"h3"},{"title":"getTexture​","type":1,"pageTitle":"Material","url":"/open_rt/api/Material#getTexture","content":"Getter &lt;/&gt; Material:getTexture( textureIdentifier: string | TextureT,-- The texture identifier (name of the Texture or the Texture instance itself) textureChannelName: string-- The name of the texture channel (&quot;Albedo&quot;, &quot;Normal&quot;, &quot;Specular&quot;) ) → Texture?-- Returns nil if the Texture cannot be found Returns a Texture from an existing texture channel.  ","version":null,"tagName":"h3"},{"title":"getTextureChannel​","type":1,"pageTitle":"Material","url":"/open_rt/api/Material#getTextureChannel","content":"Getter &lt;/&gt; Material:getTextureChannel( textureChannelType: string-- The type of the texture channel (&quot;Albedo&quot;, &quot;Normal&quot;, &quot;Specular&quot;) ) → {Texture}-- Returns an array of Texture objects Returns the Textures inside of a texture channel  ","version":null,"tagName":"h3"},{"title":"getAllTextures​","type":1,"pageTitle":"Material","url":"/open_rt/api/Material#getAllTextures","content":"Getter &lt;/&gt; Material:getAllTextures() → {Texture}-- Returns an array of Texture objects Returns all the Textures in use by the Material ","version":null,"tagName":"h3"}],"options":{"id":"default"}}