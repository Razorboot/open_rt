"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[728],{1013:e=>{e.exports=JSON.parse('{"functions":[{"name":"new","desc":"Creates a new Material instance under a given name. This name acts as an identifier that cannot be changed after creation.","params":[{"name":"name","desc":"The name of the material","lua_type":"string"}],"returns":[{"desc":"","lua_type":"Material"}],"function_type":"static","tags":["Constructor"],"source":{"line":68,"path":"src/shared/OpenRT/Material.luau"}},{"name":"destroy","desc":"Destroys a Material instance and detaches it from the parent context.","params":[],"returns":[{"desc":"","lua_type":"nil"}],"function_type":"method","tags":["Destructor"],"source":{"line":111,"path":"src/shared/OpenRT/Material.luau"}},{"name":"clone","desc":"Clones a Material instance","params":[{"name":"name","desc":"The name to give the cloned Material","lua_type":"string"}],"returns":[{"desc":"","lua_type":"Material"}],"function_type":"method","tags":["Cloner"],"source":{"line":124,"path":"src/shared/OpenRT/Material.luau"}},{"name":"setParentContext","desc":"Attaches the Material to an existing MaterialsContext.","params":[{"name":"Context","desc":"The MaterialsContext to attach the Material to. If Context == nil, the Material will be detached from its parent context.","lua_type":"MaterialsContext"}],"returns":[{"desc":"","lua_type":"nil"}],"function_type":"method","tags":["Setter"],"source":{"line":147,"path":"src/shared/OpenRT/Material.luau"}},{"name":"setSize","desc":"Sets the shared dimensions between all texture channels.","params":[{"name":"size","desc":"The new size to set","lua_type":"Vector2"}],"returns":[{"desc":"","lua_type":"nil"}],"function_type":"method","tags":["Setter"],"source":{"line":161,"path":"src/shared/OpenRT/Material.luau"}},{"name":"setTextureSampleScale","desc":"Sets the UV sample scale of a Texture under a given texture channel.","params":[{"name":"scale","desc":"The new scale to set","lua_type":"number"},{"name":"textureName","desc":"The name of the Texture under the texture channel","lua_type":"string"},{"name":"textureChannelType","desc":"The texture channel type","lua_type":"(\\"Albedo\\" | \\"Normal\\" | \\"Specular\\")"}],"returns":[{"desc":"","lua_type":"nil"}],"function_type":"method","tags":["Setter"],"source":{"line":175,"path":"src/shared/OpenRT/Material.luau"}},{"name":"setReflectionScale","desc":"Sets the shared dimensions between all texture channels.","params":[{"name":"scale","desc":"The new scale to set","lua_type":"number"}],"returns":[{"desc":"","lua_type":"nil"}],"function_type":"method","tags":["Setter"],"source":{"line":186,"path":"src/shared/OpenRT/Material.luau"}},{"name":"setBaseMaterial","desc":"Sets the underlying Material that the current Material renders on top of.","params":[{"name":"material","desc":"","lua_type":"Enum.Material"}],"returns":[{"desc":"","lua_type":"nil"}],"function_type":"method","tags":["Setter"],"source":{"line":197,"path":"src/shared/OpenRT/Material.luau"}},{"name":"setSurfaceEnabled","desc":"Sets whether the Material renders on top of a specific surface type","params":[{"name":"surface","desc":"","lua_type":"(\\"Top\\" | \\"Bottom\\" | \\"Left\\" | \\"Right\\" | \\"Front\\" | \\"Back\\")"},{"name":"enabled","desc":"","lua_type":"boolean"}],"returns":[{"desc":"","lua_type":"nil"}],"function_type":"method","tags":["Setter"],"source":{"line":208,"path":"src/shared/OpenRT/Material.luau"}},{"name":"addTexture","desc":"Adds a Texture to an existing texture channel. If the Texture already exists, a copy will still be added to the texture channel.","params":[{"name":"Tex","desc":"The Texture to add to the texture channel","lua_type":"TextureT"},{"name":"textureChannelType","desc":"The texture channel type (\\"Albedo\\", \\"Normal\\", \\"Specular\\")","lua_type":"TextureChannelType"}],"returns":[{"desc":"","lua_type":"nil"}],"function_type":"method","tags":["Setter"],"source":{"line":219,"path":"src/shared/OpenRT/Material.luau"}},{"name":"removeTexture","desc":"Removes a Texture from an existing texture channel. If the Texture already exists, a copy will still be added to the texture channel.","params":[{"name":"Tex","desc":"The Texture to remove from the texture channel","lua_type":"TextureT"},{"name":"textureChannelType","desc":"The texture channel type (\\"Albedo\\", \\"Normal\\", \\"Specular\\")","lua_type":"TextureChannelType"}],"returns":[{"desc":"","lua_type":"nil"}],"function_type":"method","tags":["Setter"],"source":{"line":238,"path":"src/shared/OpenRT/Material.luau"}},{"name":"clearTextureChannel","desc":"Removes all Textures from an existing texture channel.","params":[{"name":"textureChannelType","desc":"The texture channel type (\\"Albedo\\", \\"Normal\\", \\"Specular\\")","lua_type":"TextureChannelType"}],"returns":[{"desc":"","lua_type":"nil"}],"function_type":"method","tags":["Setter"],"source":{"line":255,"path":"src/shared/OpenRT/Material.luau"}},{"name":"getName","desc":"Returns the Name of the Material","params":[],"returns":[{"desc":"","lua_type":"string"}],"function_type":"method","tags":["Getter"],"source":{"line":267,"path":"src/shared/OpenRT/Material.luau"}},{"name":"getSize","desc":"Returns the shared dimensions between all texture channels.","params":[],"returns":[{"desc":"","lua_type":"Vector2"}],"function_type":"method","tags":["Getter"],"source":{"line":275,"path":"src/shared/OpenRT/Material.luau"}},{"name":"getTextureSampleScale","desc":"Returns the UV sample scale of a Texture under a given texture channel.","params":[{"name":"textureName","desc":"The name of the Texture under the texture channel","lua_type":"string"},{"name":"textureChannelType","desc":"The texture channel type","lua_type":"(\\"Albedo\\" | \\"Normal\\" | \\"Specular\\")"}],"returns":[{"desc":"","lua_type":"nil"}],"function_type":"method","tags":["Getter"],"source":{"line":285,"path":"src/shared/OpenRT/Material.luau"}},{"name":"getReflectionScale","desc":"Returns the reflection scale of the Material.","params":[],"returns":[{"desc":"","lua_type":"number"}],"function_type":"method","tags":["Getter"],"source":{"line":293,"path":"src/shared/OpenRT/Material.luau"}},{"name":"getParentContext","desc":"Returns the ParentContext of the Material.","params":[],"returns":[{"desc":"Returns nil if the ParentContext is nil","lua_type":"MaterialsContextT?"}],"function_type":"method","tags":["Getter"],"source":{"line":301,"path":"src/shared/OpenRT/Material.luau"}},{"name":"getBaseMaterial","desc":"Returns the underlying material the Material Instance renders on top of.","params":[],"returns":[{"desc":"","lua_type":"Enum.Material"}],"function_type":"method","tags":["Getter"],"source":{"line":309,"path":"src/shared/OpenRT/Material.luau"}},{"name":"getSurfaceEnabled","desc":"Returns whether the Material renders on top of a specific surface type.","params":[{"name":"surface","desc":"","lua_type":"(\\"Top\\" | \\"Bottom\\" | \\"Left\\" | \\"Right\\" | \\"Front\\" | \\"Back\\")"}],"returns":[{"desc":"","lua_type":"boolean"}],"function_type":"method","tags":["Getter"],"source":{"line":318,"path":"src/shared/OpenRT/Material.luau"}},{"name":"getTexture","desc":"Returns a Texture from an existing texture channel.","params":[{"name":"textureIdentifier","desc":"The texture identifier (name of the Texture or the Texture instance itself)","lua_type":"string | TextureT"},{"name":"textureChannelName","desc":"The name of the texture channel (\\"Albedo\\", \\"Normal\\", \\"Specular\\")","lua_type":"string"}],"returns":[{"desc":"Returns nil if the Texture cannot be found","lua_type":"Texture?"}],"function_type":"method","tags":["Getter"],"source":{"line":328,"path":"src/shared/OpenRT/Material.luau"}},{"name":"getTextureChannel","desc":"Returns the Textures inside of a texture channel","params":[{"name":"textureChannelType","desc":"The type of the texture channel (\\"Albedo\\", \\"Normal\\", \\"Specular\\")","lua_type":"string"}],"returns":[{"desc":"Returns an array of Texture objects","lua_type":"{Texture}"}],"function_type":"method","tags":["Getter"],"source":{"line":349,"path":"src/shared/OpenRT/Material.luau"}},{"name":"getAllTextures","desc":"Returns all the Textures in use by the Material","params":[],"returns":[{"desc":"Returns an array of Texture objects","lua_type":"{Texture}"}],"function_type":"method","tags":["Getter"],"source":{"line":357,"path":"src/shared/OpenRT/Material.luau"}}],"properties":[],"types":[],"name":"Material","desc":"The Material class represents a material with albedo, normal, and specular maps and properties.\\nMaterials are a great way to add more detail and realism to surfaces with the realtime simulation of diffuse, normal, and specular lighting.\\n\\nEach Material Instance contains...\\n\\nThe name of the Material:\\n- Name: String\\n\\nThe uniform size applied to all texture channels:\\n- Size: Vector2\\n\\nThe MaterialsContext the Material belongs to:\\n- ParentContext: MaterialsContext\\n\\nThe texture channels that contain an array of Textures. These get used to index EditableImages from the ParentContext.TextureRegistry.\\n- AlbedoTextures: {Texture}\\n- NormalTextures: {Texture}\\n- SpecularTextures: {Texture}","tags":["Class"],"source":{"line":56,"path":"src/shared/OpenRT/Material.luau"}}')}}]);