"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[876],{7503:e=>{e.exports=JSON.parse('{"functions":[{"name":"new","desc":"Creates a new OpenRT Core instance.","params":[],"returns":[{"desc":"","lua_type":"CoreT\\r\\n"}],"function_type":"method","tags":["Constructor"],"source":{"line":41,"path":"src/shared/OpenRT/Core.luau"}},{"name":"destroy","desc":"Destroys an existing OpenRT Core instance and all attached metadata and instances.","params":[],"returns":[{"desc":"","lua_type":"nil\\r\\n"}],"function_type":"method","tags":["Destructor"],"source":{"line":57,"path":"src/shared/OpenRT/Core.luau"}},{"name":"setRenderingContext","desc":"Assigns a RenderContext Instance to Core","params":[{"name":"context","desc":"The RenderContext Instance (can be nil)","lua_type":"RenderContextT"}],"returns":[{"desc":"","lua_type":"nil"}],"function_type":"method","tags":["Setter"],"source":{"line":73,"path":"src/shared/OpenRT/Core.luau"}},{"name":"setLightingContext","desc":"Assigns a LightingContext Instance to Core","params":[{"name":"context","desc":"The LightingContext Instance (can be nil)","lua_type":"LightingContextT?"}],"returns":[{"desc":"","lua_type":"nil"}],"function_type":"method","tags":["Setter"],"source":{"line":83,"path":"src/shared/OpenRT/Core.luau"}},{"name":"setMaterialsContext","desc":"Assigns a MaterialsContext Instance to Core","params":[{"name":"context","desc":"The MaterialsContext Instance (can be nil)","lua_type":"MaterialsContextT"}],"returns":[{"desc":"","lua_type":"nil"}],"function_type":"method","tags":["Setter"],"source":{"line":93,"path":"src/shared/OpenRT/Core.luau"}},{"name":"getRenderingContext","desc":"Returns the current RenderContext Instance","params":[],"returns":[{"desc":"The RenderContext or nil","lua_type":"RenderContextT?"}],"function_type":"method","source":{"line":108,"path":"src/shared/OpenRT/Core.luau"}},{"name":"getLightingContext","desc":"Returns the current LightingContext Instance","params":[],"returns":[{"desc":"The LightingContext or nil","lua_type":"LightingContextT?"}],"function_type":"method","source":{"line":115,"path":"src/shared/OpenRT/Core.luau"}},{"name":"getMaterialsContext","desc":"Returns the current MaterialsContext Instance","params":[],"returns":[{"desc":"The MaterialsContext or nil","lua_type":"MaterialsContextT?"}],"function_type":"method","source":{"line":122,"path":"src/shared/OpenRT/Core.luau"}}],"properties":[],"types":[],"name":"Core","desc":"This is where the core functionality of OpenRT is implemented.\\nThis instance acts as a \\"super state\\" for contexts used for rendering, materials, lighting, and more.\\nThe Core Singleton contains these properties:\\n\\nRenderingContext Instance defining the state of the rendering pipeline and graphics API.\\n- RenderingContext :: RenderContext?\\n\\nLightingContext Instance defining the state of global and local lighting, sky, and fog.\\n- LightingContext :: LightingContext?\\n\\nMaterialsContext Instance defining the state of the materials in the scene.\\n- MaterialsContext :: MaterialsContext?","tags":["Singleton"],"source":{"line":34,"path":"src/shared/OpenRT/Core.luau"}}')}}]);