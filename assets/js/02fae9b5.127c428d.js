"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[395],{1198:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"type":"mdx","permalink":"/open_rt/","source":"@site/pages/index.md","title":"OpenRT","description":"---","frontMatter":{},"unlisted":false}');var i=t(4848),s=t(8453);const o={},a="OpenRT",l={},c=[{value:"What is OpenRT?",id:"what-is-openrt",level:3},{value:"Important Features:",id:"important-features",level:3}];function d(e){const n={blockquote:"blockquote",h1:"h1",h3:"h3",header:"header",hr:"hr",img:"img",li:"li",p:"p",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"openrt",children:"OpenRT"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"open_rt_background",src:t(6671).A+"",width:"1453",height:"636"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsx)(n.h1,{id:"introduction",children:"Introduction"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"what-is-openrt",children:"What is OpenRT?"}),"\n",(0,i.jsxs)(n.p,{children:["OpenRT is a object-oriented retro-style ",(0,i.jsx)(n.strong,{children:"WIP realtime rendering engine"})," that utilizes multiple ",(0,i.jsx)(n.strong,{children:"performance-heavy graphics techniques and optimization strategies."})," As a result, ",(0,i.jsx)(n.strong,{children:"you'll likely encounter lag depending on the complexity of your experience and many features may be buggy and are subject to change"}),", so feel free to create issues on the Github repo when you encounter bugs!"]}),"\n",(0,i.jsx)(n.p,{children:"You can download the engine from the Github repo here."}),"\n",(0,i.jsx)(n.h3,{id:"important-features",children:"Important Features:"}),"\n",(0,i.jsxs)(n.p,{children:["OpenRT works by splitting up the rendering pipeline into four main ",(0,i.jsx)(n.strong,{children:"main user-facing modules:"}),' "Core", "MaterialsContext", "RenderContext", and "LightingContext", which are further subdivided into "Materials", "Lights", and "Textures". It exposes a complete API for controlling lighting, adjusting render behavior, setting materials, and controlling resolution, and the ability to add to or change the per-pixel rendering pipeline.']}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"open_rt_map",src:t(8593).A+"",width:"5862",height:"7658"})}),"\n",(0,i.jsx)(n.p,{children:"OpenRT currently supports:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Multithreading"}),"\n",(0,i.jsx)(n.li,{children:"Global lights (sun)"}),"\n",(0,i.jsx)(n.li,{children:"Local lights (PointLights only at the moment)"}),"\n",(0,i.jsx)(n.li,{children:"Direct Illumination (diffuse, specular, hard shadows)"}),"\n",(0,i.jsx)(n.li,{children:"Custom Materials (with albedo, specular, and normal maps)"}),"\n",(0,i.jsx)(n.li,{children:"Interlacing (for performance and style!)"}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsx)(n.h1,{id:"getting-started",children:"Getting Started"}),"\n",(0,i.jsx)(n.p,{children:"Learn how to set up a new experience with OpenRT."}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},6671:(e,n,t)=>{t.d(n,{A:()=>r});const r=t.p+"assets/images/open_rt_background-132307d8454a9026565b87cf97d8133a.png"},8593:(e,n,t)=>{t.d(n,{A:()=>r});const r=t.p+"assets/images/open_rt_map-2a95e7e5eacf408cb2c1c0e288a7ac65.png"},8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>a});var r=t(6540);const i={},s=r.createContext(i);function o(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);