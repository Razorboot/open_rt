"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[162],{9635:e=>{e.exports=JSON.parse('{"functions":[{"name":"new","desc":"Creates a new Texture instance.","params":[{"name":"name","desc":"The name of the Texture","lua_type":"string"}],"returns":[{"desc":"","lua_type":"Texture"}],"function_type":"static","tags":["Constructor"],"source":{"line":67,"path":"src/shared/OpenRT/Texture.luau"}},{"name":"destroy","desc":"Destroys the current Image and all associated metadata for the Texture","params":[],"returns":[{"desc":"","lua_type":"nil"}],"function_type":"method","tags":["Destructor"],"source":{"line":99,"path":"src/shared/OpenRT/Texture.luau"}},{"name":"clone","desc":"Clones a Texture instance","params":[{"name":"name","desc":"The name to give the cloned Texture","lua_type":"string"}],"returns":[{"desc":"","lua_type":"Texture"}],"function_type":"method","tags":["Cloner"],"source":{"line":112,"path":"src/shared/OpenRT/Texture.luau"}},{"name":"setParentContext","desc":"Sets the MaterialsContext that the Texture is stored in.","params":[{"name":"Context:","desc":"The context the Texture is stored in","lua_type":"MaterialsContext"}],"returns":[{"desc":"","lua_type":"nil"}],"function_type":"method","tags":["Setter"],"source":{"line":130,"path":"src/shared/OpenRT/Texture.luau"}},{"name":"setSize","desc":"Sets the dimensions of the EditableImage attached to the Texture","params":[{"name":"size:","desc":"The new size of the Texture","lua_type":"Vector2"}],"returns":[{"desc":"","lua_type":"nil"}],"function_type":"method","tags":["Setter"],"source":{"line":143,"path":"src/shared/OpenRT/Texture.luau"}},{"name":"setScale","desc":"Sets the scale of the Image attached to the Texture for UV mapping during rendering","params":[{"name":"scale:","desc":"The new scale of the Texture","lua_type":"number"}],"returns":[{"desc":"","lua_type":"nil"}],"function_type":"method","tags":["Setter"],"source":{"line":159,"path":"src/shared/OpenRT/Texture.luau"}},{"name":"setImageId","desc":"Creates an EditableImage from an asset ID and assigns it to the Texture","params":[{"name":"imageId","desc":"The image id used to create the Image","lua_type":"string"}],"returns":[{"desc":"","lua_type":"nil"}],"function_type":"method","tags":["Setter"],"source":{"line":171,"path":"src/shared/OpenRT/Texture.luau"}},{"name":"setContent","desc":"Creates a new EditableImage and assigns it to the Texture","params":[{"name":"imageContent","desc":"The Image Content used to create the EditableImage used by the Texture","lua_type":"Content"}],"returns":[{"desc":"","lua_type":"nil"}],"function_type":"method","tags":["Setter"],"source":{"line":181,"path":"src/shared/OpenRT/Texture.luau"}},{"name":"compile","desc":"Compiles the Texture\'s Image pixel data into a buffer.u8 and assigns it to the Texture\'s PixelBuffer","params":[],"returns":[{"desc":"Returns nil if Image is nil","lua_type":"buffer?"}],"function_type":"method","tags":["Setter"],"source":{"line":193,"path":"src/shared/OpenRT/Texture.luau"}},{"name":"getName","desc":"Returns the Name of the Texture","params":[],"returns":[{"desc":"","lua_type":"string"}],"function_type":"method","tags":["Getter"],"source":{"line":209,"path":"src/shared/OpenRT/Texture.luau"}},{"name":"getSize","desc":"Returns the Size of the Texture","params":[],"returns":[{"desc":"Returns nil if Size is nil","lua_type":"Vector2"}],"function_type":"method","tags":["Getter"],"source":{"line":217,"path":"src/shared/OpenRT/Texture.luau"}},{"name":"getScale","desc":"Returns the Scale of the Texture","params":[],"returns":[{"desc":"","lua_type":"number"}],"function_type":"method","tags":["Getter"],"source":{"line":225,"path":"src/shared/OpenRT/Texture.luau"}},{"name":"getImageId","desc":"Returns the URI of Content attached to the Texture","params":[],"returns":[{"desc":"Returns nil if Content is nil","lua_type":"string?"}],"function_type":"method","tags":["Getter"],"source":{"line":233,"path":"src/shared/OpenRT/Texture.luau"}}],"properties":[],"types":[],"name":"Texture","desc":"The Texture class acts as a wrapper around an EditableImage with added metadata used by OpenRT for appearance modification, such as transprency, gamma, tint, and more.\\nTextures are typically used to provide surface information for materials, though they are also used for other purposes, like frame captures.\\nThe below properties are used to modify the appearance of the Texture, but they are read only and can be accessed with Setters and Getters (see below).\\n\\nEach Material Instance contains...\\n\\nThe name of the Texture\\n- Name: String\\n\\nThe resolution of the Texture, This property is read only when the Texture is parented to a Material.\\n- Size: Vector2 *- default: (64, 64)*\\n\\nThe scale of the Texture. This gets used for Materials with UV mapping, but is disabled for frame captures.\\n- Scale: number *- default: (1.0)*\\n\\nThe Material the Texture belongs to:\\n- ParentMaterial: Material\\n\\nThe EditableImage used by the Texture:\\n- Image: EditableImage\\n\\nThe Content used to create the EditableImage.\\n- ImageContent: Content\\n\\nThe PixelBuffer compiled from the Texture\'s Image data whenever the Image is changed.\\n- PixelBuffer: buffer","tags":["Class"],"source":{"line":56,"path":"src/shared/OpenRT/Texture.luau"}}')}}]);